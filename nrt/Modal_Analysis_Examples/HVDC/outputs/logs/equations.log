2020-06-29 16:46:31 | INFO |  ============================================================
2020-06-29 16:46:31 | INFO | DYNAWO VERSION  :     1.1.0
2020-06-29 16:46:31 | INFO | DYNAWO REVISION :  ModalAnalysis-3a330ea9
2020-06-29 16:46:31 | INFO |  ============================================================
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | Equations init
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | 0 $DAEres3 = hvdc.u10Pu.im * hvdc.i10Pu.im + hvdc.u10Pu.re * hvdc.i10Pu.re - hvdc.P10Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | 1 $DAEres2 = hvdc.u10Pu.im * hvdc.i10Pu.re + (-hvdc.u10Pu.re) * hvdc.i10Pu.im - hvdc.Q10Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | 2 $DAEres1 = hvdc.u20Pu.im * hvdc.i20Pu.im + hvdc.u20Pu.re * hvdc.i20Pu.re - hvdc.P20Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | 3 $DAEres0 = hvdc.u20Pu.im * hvdc.i20Pu.re + (-hvdc.u20Pu.re) * hvdc.i20Pu.im - hvdc.Q20Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | Equations
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | 0 hvdc._PPu_Side._activePowerControl._pIAntiWindupVariableLimits._add1._u2 = hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.y - hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 1 hvdc._PPu_Side._activePowerControl._pIAntiWindupVariableLimits._add1._y = hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add1.k1 * hvdc.PPu_Side.activePowerControl.add1.y + hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add1.k2 * hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 2 $DAEres27 = hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.integrator.k * hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add1.y - der(hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.integrator.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 3 hvdc._Conv1._QInjPu = (-100.0) * (hvdc.terminal1.V.im * hvdc.terminal1.i.re - hvdc.terminal1.V.re * hvdc.terminal1.i.im) / hvdc.Conv1.SNom model: HVDC
2020-06-29 16:46:31 | DEBUG | 4 hvdc._PPu_Side._aCVoltageControl._qRefQU._feedback1._u2 = hvdc.PPu_Side.aCVoltageControl.qRefQU.gain.k * hvdc.Conv1.QInjPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 5 hvdc._dCLine._I1dcPu = 0.01 * hvdc.Conv1.PInjPu * hvdc.dCLine.SNom / hvdc.dCLine.U1dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 6 $DAEres24 = hvdc.dCLine.U2dcPu + (-hvdc.dCLine.I1dcPu) * hvdc.dCLine.RdcPu - hvdc.dCLine.CdcPu * der(hvdc.dCLine.U1dcPu) * hvdc.dCLine.RdcPu - hvdc.dCLine.U1dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 7 hvdc._PPu_Side._aCVoltageControl._qRefLim._QMinPPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinPPu.tableID, 1, hvdc.Conv1.PInjPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 8 hvdc._PPu_Side._aCVoltageControl._qRefLim._QMaxPPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxPPu.tableID, 1, hvdc.Conv1.PInjPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 9 $DAEres22 = smooth(0, if hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y > (-hvdc.PPu_Side.activePowerControl.IpMinPu) then -hvdc.PPu_Side.activePowerControl.IpMinPu else if hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y < hvdc.PPu_Side.activePowerControl.IpMinPu then hvdc.PPu_Side.activePowerControl.IpMinPu else hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y) - hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 10 $DAEres21 = hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.k2 * hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.integrator.y + hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.k1 * hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.u1 - hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 11 $DAEres20 = hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.gain1.k * hvdc.PPu_Side.activePowerControl.add1.y - hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.u1 model: HVDC
2020-06-29 16:46:31 | DEBUG | 12 $DAEres17 = (-100.0) * (hvdc.terminal1.V.re * hvdc.terminal1.i.re + hvdc.terminal1.V.im * hvdc.terminal1.i.im) / hvdc.Conv1.SNom - hvdc.Conv1.PInjPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 13 $DAEres11 = hvdc.PPu_Side.aCVoltageControl.gain.k * hvdc.PPu_Side.aCVoltageControl.gain.u - hvdc.Conv1.iqPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 14 hvdc._UdcPu_Side._dCVoltageControl._PI._u = hvdc.UdcPu_Side.dCVoltageControl.feedback.u1 - hvdc.dCLine.U2dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 15 hvdc._UdcPu_Side._dCVoltageControl._PI._add._u1 = hvdc.UdcPu_Side.dCVoltageControl.PI.gain1.k * hvdc.UdcPu_Side.dCVoltageControl.PI.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 16 hvdc._UdcPu_Side._dCVoltageControl._PI._add._y = hvdc.UdcPu_Side.dCVoltageControl.PI.add.k1 * hvdc.UdcPu_Side.dCVoltageControl.PI.add.u1 + hvdc.UdcPu_Side.dCVoltageControl.PI.add.k2 * hvdc.UdcPu_Side.dCVoltageControl.PI.integrator.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 17 hvdc._UdcPu_Side._dCVoltageControl._PI._y = smooth(0, if hvdc.UdcPu_Side.dCVoltageControl.PI.add.y > hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMax then hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMax else if hvdc.UdcPu_Side.dCVoltageControl.PI.add.y < hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMin then hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMin else hvdc.UdcPu_Side.dCVoltageControl.PI.add.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 18 hvdc._Conv2._idPu = hvdc.UdcPu_Side.dCVoltageControl.gain1.k * hvdc.UdcPu_Side.dCVoltageControl.PI.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 19 hvdc._UdcPu_Side._dCVoltageControl._PI._add1._u2 = hvdc.UdcPu_Side.dCVoltageControl.PI.y - hvdc.UdcPu_Side.dCVoltageControl.PI.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 20 hvdc._UdcPu_Side._dCVoltageControl._PI._add1._y = hvdc.UdcPu_Side.dCVoltageControl.PI.add1.k1 * hvdc.UdcPu_Side.dCVoltageControl.PI.u + hvdc.UdcPu_Side.dCVoltageControl.PI.add1.k2 * hvdc.UdcPu_Side.dCVoltageControl.PI.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 21 $DAEres31 = hvdc.UdcPu_Side.dCVoltageControl.PI.integrator.k * hvdc.UdcPu_Side.dCVoltageControl.PI.add1.y - der(hvdc.UdcPu_Side.dCVoltageControl.PI.integrator.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 22 hvdc._PPu_Side._activePowerControl._deltaP._feedback._u1 = smooth(0, if hvdc.dCLine.U1dcPu > hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMax then hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMax else if hvdc.dCLine.U1dcPu < hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMin then hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMin else hvdc.dCLine.U1dcPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 23 hvdc._PPu_Side._activePowerControl._deltaP._PI._u = hvdc.PPu_Side.activePowerControl.deltaP.feedback.u1 - hvdc.dCLine.U1dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 24 hvdc._PPu_Side._activePowerControl._deltaP._PI._add._u1 = hvdc.PPu_Side.activePowerControl.deltaP.PI.gain1.k * hvdc.PPu_Side.activePowerControl.deltaP.PI.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 25 hvdc._PPu_Side._activePowerControl._deltaP._PI._add._y = hvdc.PPu_Side.activePowerControl.deltaP.PI.add.k1 * hvdc.PPu_Side.activePowerControl.deltaP.PI.add.u1 + hvdc.PPu_Side.activePowerControl.deltaP.PI.add.k2 * hvdc.PPu_Side.activePowerControl.deltaP.PI.integrator.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 26 hvdc._PPu_Side._activePowerControl._deltaP._PI._y = smooth(0, if hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y > hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMax then hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMax else if hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y < hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMin then hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMin else hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 27 hvdc._PPu_Side._activePowerControl._deltaP._DeltaPRawPu = hvdc.PPu_Side.activePowerControl.deltaP.gain.k * hvdc.PPu_Side.activePowerControl.deltaP.PI.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 28 hvdc._PPu_Side._activePowerControl._add1._u1 = if hvdc.PPu_Side.activateDeltaP then hvdc.PPu_Side.activePowerControl.deltaP.DeltaPRawPu else hvdc.PPu_Side.activePowerControl.constant1.k model: HVDC
2020-06-29 16:46:31 | DEBUG | 29 $DAEres19 = hvdc.PPu_Side.activePowerControl.add1.k2 * hvdc.PPu_Side.activePowerControl.add1.u2 + hvdc.PPu_Side.activePowerControl.add1.k1 * hvdc.PPu_Side.activePowerControl.add1.u1 - hvdc.PPu_Side.activePowerControl.add1.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 30 hvdc._PPu_Side._activePowerControl._deltaP._PI._add1._u2 = hvdc.PPu_Side.activePowerControl.deltaP.PI.y - hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 31 hvdc._PPu_Side._activePowerControl._deltaP._PI._add1._y = hvdc.PPu_Side.activePowerControl.deltaP.PI.add1.k1 * hvdc.PPu_Side.activePowerControl.deltaP.PI.u + hvdc.PPu_Side.activePowerControl.deltaP.PI.add1.k2 * hvdc.PPu_Side.activePowerControl.deltaP.PI.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 32 $DAEres7 = hvdc.PPu_Side.activePowerControl.deltaP.PI.integrator.k * hvdc.PPu_Side.activePowerControl.deltaP.PI.add1.y - der(hvdc.PPu_Side.activePowerControl.deltaP.PI.integrator.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 33 hvdc._Conv1._UPhase = Modelica.Math.atan3(hvdc.terminal1.V.im, hvdc.terminal1.V.re, 0.0) model: HVDC
2020-06-29 16:46:31 | DEBUG | 34 hvdc._Blocking._U1Pu = (hvdc.terminal1.V.re ^ 2.0 + hvdc.terminal1.V.im ^ 2.0) ^ 0.5 model: HVDC
2020-06-29 16:46:31 | DEBUG | 35 hvdc._PPu_Side._aCVoltageControl._division._u2 = max(hvdc.Blocking.U1Pu, hvdc.PPu_Side.aCVoltageControl.const.k) model: HVDC
2020-06-29 16:46:31 | DEBUG | 36 hvdc._PPu_Side._iqModPu = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.PPu_Side.aCVoltageControl.iqMod.tableID, 1, hvdc.Blocking.U1Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 37 hvdc._PPu_Side._aCVoltageControl._add._y = hvdc.PPu_Side.aCVoltageControl.add.k1 * hvdc.PPu_Side.iqModPu + hvdc.PPu_Side.aCVoltageControl.add.k2 * hvdc.PPu_Side.aCVoltageControl.firstOrder.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 38 $DAEres13 = smooth(0, if hvdc.PPu_Side.aCVoltageControl.add.y > (-hvdc.PPu_Side.aCVoltageControl.IqMinPu) then -hvdc.PPu_Side.aCVoltageControl.IqMinPu else if hvdc.PPu_Side.aCVoltageControl.add.y < hvdc.PPu_Side.aCVoltageControl.IqMinPu then hvdc.PPu_Side.aCVoltageControl.IqMinPu else hvdc.PPu_Side.aCVoltageControl.add.y) - hvdc.PPu_Side.aCVoltageControl.switch1.u3 model: HVDC
2020-06-29 16:46:31 | DEBUG | 39 $DAEres14 = (if hvdc.PPu_Side.iqModPu == 0.0 then max(0.001, sqrt(hvdc.PPu_Side.limitsCalculationFunction.InPu ^ 2.0 - min(hvdc.PPu_Side.limitsCalculationFunction.InPu ^ 2.0, hvdc.Conv1.idPu ^ 2.0))) else hvdc.PPu_Side.limitsCalculationFunction.InPu) + hvdc.PPu_Side.aCVoltageControl.IqMinPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 40 hvdc._PPu_Side._aCVoltageControl._qRefLim._QMaxUPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxUPu.tableID, 1, hvdc.Blocking.U1Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 41 hvdc._PPu_Side._aCVoltageControl._qRefLim._QMinUPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinUPu.tableID, 1, hvdc.Blocking.U1Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 42 hvdc._PPu_Side._aCVoltageControl._qRefQU._deadZone._u = hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y - hvdc.Blocking.U1Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | 43 hvdc._PPu_Side._aCVoltageControl._qRefQU._deadZone._y = smooth(0, if hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u > hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMax then hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u - hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMax else if hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u < hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMin then hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u - hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMin else 0.0) model: HVDC
2020-06-29 16:46:31 | DEBUG | 44 hvdc._PPu_Side._aCVoltageControl._qRefQU._PI._u = hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.y - hvdc.PPu_Side.aCVoltageControl.qRefQU.feedback1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 45 hvdc._PPu_Side._aCVoltageControl._qRefQU._PI._add._u1 = hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.gain1.k * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 46 hvdc._PPu_Side._aCVoltageControl._qRefQU._PI._add._y = hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.k1 * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.u1 + hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.k2 * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.integrator.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 47 hvdc._PPu_Side._aCVoltageControl._qRefQU._QRefUPu = smooth(0, if hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y > hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax then hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax else if hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y < hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin then hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin else hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 48 hvdc._PPu_Side._aCVoltageControl._qRefLim._QRefUQPu = if hvdc.PPu_Side.modeU then hvdc.PPu_Side.aCVoltageControl.qRefQU.QRefUPu else hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 49 hvdc._PPu_Side._aCVoltageControl._qRefLim._limiter._y = smooth(0, if hvdc.PPu_Side.aCVoltageControl.qRefLim.QRefUQPu > hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMax then hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMax else if hvdc.PPu_Side.aCVoltageControl.qRefLim.QRefUQPu < hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMin then hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMin else hvdc.PPu_Side.aCVoltageControl.qRefLim.QRefUQPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 50 hvdc._PPu_Side._aCVoltageControl._qRefLim._variableLimiter._y = smooth(0, if hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.y > hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] then hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] else if hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.y < hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] then hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] else hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 51 hvdc._PPu_Side._aCVoltageControl._division._u1 = smooth(0, if hvdc.PPu_Side.aCVoltageControl.qRefLim.variableLimiter.y > hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] then hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] else if hvdc.PPu_Side.aCVoltageControl.qRefLim.variableLimiter.y < hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] then hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] else hvdc.PPu_Side.aCVoltageControl.qRefLim.variableLimiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 52 hvdc._PPu_Side._aCVoltageControl._division._y = hvdc.PPu_Side.aCVoltageControl.division.u1 / hvdc.PPu_Side.aCVoltageControl.division.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 53 $DAEres25 = hvdc.PPu_Side.aCVoltageControl.firstOrder.k * hvdc.PPu_Side.aCVoltageControl.division.y + (-hvdc.PPu_Side.aCVoltageControl.firstOrder.y) - der(hvdc.PPu_Side.aCVoltageControl.firstOrder.y) * hvdc.PPu_Side.aCVoltageControl.firstOrder.T model: HVDC
2020-06-29 16:46:31 | DEBUG | 54 hvdc._PPu_Side._aCVoltageControl._qRefQU._PI._add1._u2 = hvdc.PPu_Side.aCVoltageControl.qRefQU.QRefUPu - hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 55 hvdc._PPu_Side._aCVoltageControl._qRefQU._PI._add1._y = hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add1.k1 * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.u + hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add1.k2 * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 56 $DAEres26 = hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.integrator.k * hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add1.y - der(hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.integrator.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 57 hvdc._Conv2._UPhase = Modelica.Math.atan3(hvdc.terminal2.V.im, hvdc.terminal2.V.re, 0.0) model: HVDC
2020-06-29 16:46:31 | DEBUG | 58 hvdc._Blocking._U2Pu = (hvdc.terminal2.V.re ^ 2.0 + hvdc.terminal2.V.im ^ 2.0) ^ 0.5 model: HVDC
2020-06-29 16:46:31 | DEBUG | 59 hvdc._PPu_Side._activePowerControl._RPFault._rpfault = if hvdc.PPu_Side.activePowerControl.RPFault.Timer == 0.0 then 1.0 else min(hvdc.PPu_Side.activePowerControl.RPFault.SlopeRPFault * max(time - hvdc.PPu_Side.activePowerControl.RPFault.Timer, 0.0), 1.0) model: HVDC
2020-06-29 16:46:31 | DEBUG | 60 hvdc._PPu_Side._activePowerControl._limiter._u = hvdc.PPu_Side.activePowerControl.slewRateLimiter.y * hvdc.PPu_Side.activePowerControl.RPFault.rpfault model: HVDC
2020-06-29 16:46:31 | DEBUG | 61 hvdc._PPu_Side._activePowerControl._feedback._u1 = smooth(0, if hvdc.PPu_Side.activePowerControl.limiter.u > hvdc.PPu_Side.activePowerControl.limiter.uMax then hvdc.PPu_Side.activePowerControl.limiter.uMax else if hvdc.PPu_Side.activePowerControl.limiter.u < hvdc.PPu_Side.activePowerControl.limiter.uMin then hvdc.PPu_Side.activePowerControl.limiter.uMin else hvdc.PPu_Side.activePowerControl.limiter.u) model: HVDC
2020-06-29 16:46:31 | DEBUG | 62 $DAEres18 = hvdc.PPu_Side.activePowerControl.feedback.u1 + (-hvdc.Conv1.PInjPu) - hvdc.PPu_Side.activePowerControl.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 63 $DAEres10 = (if hvdc.Blocking.blocked then hvdc.PPu_Side.activePowerControl.zero.k else hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.y) - hvdc.Conv1.idPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 64 $DAEres12 = (if hvdc.Blocking.blocked then hvdc.PPu_Side.aCVoltageControl.zero.k else hvdc.PPu_Side.aCVoltageControl.switch1.u3) - hvdc.PPu_Side.aCVoltageControl.gain.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 65 hvdc._UdcPu_Side._aCVoltageControl._division._u2 = max(hvdc.Blocking.U2Pu, hvdc.UdcPu_Side.aCVoltageControl.const.k) model: HVDC
2020-06-29 16:46:31 | DEBUG | 66 hvdc._PPu_Side._iqMod1Pu = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.UdcPu_Side.aCVoltageControl.iqMod.tableID, 1, hvdc.Blocking.U2Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 67 hvdc._UdcPu_Side._aCVoltageControl._add._y = hvdc.UdcPu_Side.aCVoltageControl.add.k1 * hvdc.PPu_Side.iqMod1Pu + hvdc.UdcPu_Side.aCVoltageControl.add.k2 * hvdc.UdcPu_Side.aCVoltageControl.firstOrder.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 68 hvdc._UdcPu_Side._aCVoltageControl._IqMinPu = -(if hvdc.PPu_Side.iqMod1Pu == 0.0 then max(0.001, sqrt(hvdc.UdcPu_Side.limitsCalculationFunction.InPu ^ 2.0 - min(hvdc.UdcPu_Side.limitsCalculationFunction.InPu ^ 2.0, hvdc.Conv2.idPu ^ 2.0))) else hvdc.UdcPu_Side.limitsCalculationFunction.InPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 69 hvdc._UdcPu_Side._aCVoltageControl._switch1._u3 = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.add.y > (-hvdc.UdcPu_Side.aCVoltageControl.IqMinPu) then -hvdc.UdcPu_Side.aCVoltageControl.IqMinPu else if hvdc.UdcPu_Side.aCVoltageControl.add.y < hvdc.UdcPu_Side.aCVoltageControl.IqMinPu then hvdc.UdcPu_Side.aCVoltageControl.IqMinPu else hvdc.UdcPu_Side.aCVoltageControl.add.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 70 hvdc._UdcPu_Side._aCVoltageControl._gain._u = if hvdc.Blocking.blocked then hvdc.UdcPu_Side.aCVoltageControl.zero.k else hvdc.UdcPu_Side.aCVoltageControl.switch1.u3 model: HVDC
2020-06-29 16:46:31 | DEBUG | 71 hvdc._Conv2._iqPu = hvdc.UdcPu_Side.aCVoltageControl.gain.k * hvdc.UdcPu_Side.aCVoltageControl.gain.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 72 $DAEres23 = (if hvdc.PPu_Side.iqModPu == 0.0 and hvdc.PPu_Side.iqMod1Pu == 0.0 then hvdc.PPu_Side.limitsCalculationFunction.IpMaxCstPu else max(0.001, sqrt(hvdc.PPu_Side.limitsCalculationFunction.InPu ^ 2.0 - min(hvdc.PPu_Side.limitsCalculationFunction.InPu ^ 2.0, max(hvdc.Conv1.iqPu ^ 2.0, hvdc.Conv2.iqPu ^ 2.0))))) + hvdc.PPu_Side.activePowerControl.IpMinPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 73 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._QMaxUPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxUPu.tableID, 1, hvdc.Blocking.U2Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 74 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._QMinUPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinUPu.tableID, 1, hvdc.Blocking.U2Pu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 75 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._deadZone._u = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y - hvdc.Blocking.U2Pu model: HVDC
2020-06-29 16:46:31 | DEBUG | 76 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._deadZone._y = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMax then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMax else if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMin then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMin else 0.0) model: HVDC
2020-06-29 16:46:31 | DEBUG | 77 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._slewRateLimiter._u = URef2Pu.Value0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 78 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._slewRateLimiter._val = (hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.u - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y) / hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Td model: HVDC
2020-06-29 16:46:31 | DEBUG | 79 $DAEres9 = (if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling else if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising else hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val) - der(hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 80 hvdc._PPu_Side._aCVoltageControl._qRefQU._slewRateLimiter._u = URef1Pu.Value0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 81 hvdc._PPu_Side._aCVoltageControl._qRefQU._slewRateLimiter._val = (hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.u - hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y) / hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Td model: HVDC
2020-06-29 16:46:31 | DEBUG | 82 $DAEres5 = (if hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val < hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling then hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling else if hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val > hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising then hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising else hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val) - der(hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 83 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._slewRateLimiter1._u = QRef2Pu.Value0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 84 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._slewRateLimiter1._val = (hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.u - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y) / hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Td model: HVDC
2020-06-29 16:46:31 | DEBUG | 85 $DAEres8 = (if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling else if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising else hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val) - der(hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 86 hvdc._PPu_Side._aCVoltageControl._qRefQU._slewRateLimiter1._u = QRef1Pu.Value0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 87 hvdc._PPu_Side._aCVoltageControl._qRefQU._slewRateLimiter1._val = (hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.u - hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y) / hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Td model: HVDC
2020-06-29 16:46:31 | DEBUG | 88 $DAEres4 = (if hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val < hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling then hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling else if hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val > hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising then hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising else hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val) - der(hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 89 hvdc._PPu_Side._activePowerControl._slewRateLimiter._u = PRefPu.Value0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 90 hvdc._PPu_Side._activePowerControl._slewRateLimiter._val = (hvdc.PPu_Side.activePowerControl.slewRateLimiter.u - hvdc.PPu_Side.activePowerControl.slewRateLimiter.y) / hvdc.PPu_Side.activePowerControl.slewRateLimiter.Td model: HVDC
2020-06-29 16:46:31 | DEBUG | 91 $DAEres6 = (if hvdc.PPu_Side.activePowerControl.slewRateLimiter.val < hvdc.PPu_Side.activePowerControl.slewRateLimiter.Falling then hvdc.PPu_Side.activePowerControl.slewRateLimiter.Falling else if hvdc.PPu_Side.activePowerControl.slewRateLimiter.val > hvdc.PPu_Side.activePowerControl.slewRateLimiter.Rising then hvdc.PPu_Side.activePowerControl.slewRateLimiter.Rising else hvdc.PPu_Side.activePowerControl.slewRateLimiter.val) - der(hvdc.PPu_Side.activePowerControl.slewRateLimiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 92 hvdc._terminal2._i._re = if hvdc.Conv2.running.value then (-0.01) * (cos(hvdc.Conv2.UPhase) * hvdc.Conv2.idPu - sin(hvdc.Conv2.UPhase) * hvdc.Conv2.iqPu) * hvdc.Conv2.SNom else 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 93 hvdc._terminal2._i._im = if hvdc.Conv2.running.value then (-0.01) * (sin(hvdc.Conv2.UPhase) * hvdc.Conv2.idPu + cos(hvdc.Conv2.UPhase) * hvdc.Conv2.iqPu) * hvdc.Conv2.SNom else 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 94 hvdc._Conv2._QInjPu = (-100.0) * (hvdc.terminal2.V.im * hvdc.terminal2.i.re - hvdc.terminal2.V.re * hvdc.terminal2.i.im) / hvdc.Conv2.SNom model: HVDC
2020-06-29 16:46:31 | DEBUG | 95 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._feedback1._u2 = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.gain.k * hvdc.Conv2.QInjPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 96 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._PI._u = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.y - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.feedback1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 97 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._PI._add._u1 = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.gain1.k * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.u model: HVDC
2020-06-29 16:46:31 | DEBUG | 98 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._PI._add._y = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.k1 * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.u1 + hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.k2 * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.integrator.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 99 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._QRefUPu = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax else if hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin else hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 100 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._QRefUQPu = if hvdc.UdcPu_Side.modeU then hvdc.UdcPu_Side.aCVoltageControl.qRefQU.QRefUPu else hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 101 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._limiter._y = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QRefUQPu > hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMax then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMax else if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QRefUQPu < hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMin then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMin else hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QRefUQPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 102 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._PI._add1._u2 = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.QRefUPu - hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y model: HVDC
2020-06-29 16:46:31 | DEBUG | 103 hvdc._UdcPu_Side._aCVoltageControl._qRefQU._PI._add1._y = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add1.k1 * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.u + hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add1.k2 * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add1.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 104 $DAEres28 = hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.integrator.k * hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add1.y - der(hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.integrator.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 105 hvdc._Conv2._PInjPu = (-100.0) * (hvdc.terminal2.V.re * hvdc.terminal2.i.re + hvdc.terminal2.V.im * hvdc.terminal2.i.im) / hvdc.Conv2.SNom model: HVDC
2020-06-29 16:46:31 | DEBUG | 106 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._QMaxPPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxPPu.tableID, 1, hvdc.Conv2.PInjPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 107 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._QMinPPu._y[1] = Modelica.Blocks.Tables.Internal.getTable1DValue(hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinPPu.tableID, 1, hvdc.Conv2.PInjPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 108 hvdc._UdcPu_Side._aCVoltageControl._qRefLim._variableLimiter._y = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.y > hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] else if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.y < hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] else hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 109 hvdc._UdcPu_Side._aCVoltageControl._division._u1 = smooth(0, if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.variableLimiter.y > hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] else if hvdc.UdcPu_Side.aCVoltageControl.qRefLim.variableLimiter.y < hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] then hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] else hvdc.UdcPu_Side.aCVoltageControl.qRefLim.variableLimiter.y) model: HVDC
2020-06-29 16:46:31 | DEBUG | 110 hvdc._UdcPu_Side._aCVoltageControl._division._y = hvdc.UdcPu_Side.aCVoltageControl.division.u1 / hvdc.UdcPu_Side.aCVoltageControl.division.u2 model: HVDC
2020-06-29 16:46:31 | DEBUG | 111 $DAEres29 = hvdc.UdcPu_Side.aCVoltageControl.firstOrder.k * hvdc.UdcPu_Side.aCVoltageControl.division.y + (-hvdc.UdcPu_Side.aCVoltageControl.firstOrder.y) - der(hvdc.UdcPu_Side.aCVoltageControl.firstOrder.y) * hvdc.UdcPu_Side.aCVoltageControl.firstOrder.T model: HVDC
2020-06-29 16:46:31 | DEBUG | 112 hvdc._dCLine._I2dcPu = 0.01 * hvdc.Conv2.PInjPu * hvdc.dCLine.SNom / hvdc.dCLine.U2dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 113 $DAEres30 = hvdc.dCLine.U1dcPu + (-hvdc.dCLine.I2dcPu) * hvdc.dCLine.RdcPu - hvdc.dCLine.CdcPu * der(hvdc.dCLine.U2dcPu) * hvdc.dCLine.RdcPu - hvdc.dCLine.U2dcPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 114 $DAEres15 = (if hvdc.Conv1.running.value then (-0.01) * (sin(hvdc.Conv1.UPhase) * hvdc.Conv1.idPu + cos(hvdc.Conv1.UPhase) * hvdc.Conv1.iqPu) * hvdc.Conv1.SNom else 0.0) - hvdc.terminal1.i.im model: HVDC
2020-06-29 16:46:31 | DEBUG | 115 $DAEres16 = (if hvdc.Conv1.running.value then (-0.01) * (cos(hvdc.Conv1.UPhase) * hvdc.Conv1.idPu - sin(hvdc.Conv1.UPhase) * hvdc.Conv1.iqPu) * hvdc.Conv1.SNom else 0.0) - hvdc.terminal1.i.re model: HVDC
2020-06-29 16:46:31 | DEBUG | 116 $DAEres4 = if line.running.value then line.ZPu.re * (line.terminal1.i.re + line.YPu.im * line.terminal1.V.im - line.YPu.re * line.terminal1.V.re) - line.ZPu.im * (line.terminal1.i.im + (-line.YPu.re) * line.terminal1.V.im - line.YPu.im * line.terminal1.V.re) - (line.terminal1.V.re - line.terminal2.V.re) else line.terminal2.i.re model: Line1
2020-06-29 16:46:31 | DEBUG | 117 $DAEres5 = if line.running.value then line.ZPu.re * (line.terminal2.i.re + line.YPu.im * line.terminal2.V.im - line.YPu.re * line.terminal2.V.re) - line.ZPu.im * (line.terminal2.i.im + (-line.YPu.re) * line.terminal2.V.im - line.YPu.im * line.terminal2.V.re) - (line.terminal2.V.re - line.terminal1.V.re) else line.terminal1.i.re model: Line1
2020-06-29 16:46:31 | DEBUG | 118 $DAEres6 = if line.running.value then line.ZPu.re * (line.terminal2.i.im + (-line.YPu.re) * line.terminal2.V.im - line.YPu.im * line.terminal2.V.re) + line.ZPu.im * (line.terminal2.i.re + line.YPu.im * line.terminal2.V.im - line.YPu.re * line.terminal2.V.re) - (line.terminal2.V.im - line.terminal1.V.im) else line.terminal1.i.im model: Line1
2020-06-29 16:46:31 | DEBUG | 119 $DAEres7 = if line.running.value then line.ZPu.re * (line.terminal1.i.im + (-line.YPu.re) * line.terminal1.V.im - line.YPu.im * line.terminal1.V.re) + line.ZPu.im * (line.terminal1.i.re + line.YPu.im * line.terminal1.V.im - line.YPu.re * line.terminal1.V.re) - (line.terminal1.V.im - line.terminal2.V.im) else line.terminal2.i.im model: Line1
2020-06-29 16:46:31 | DEBUG | 120 $DAEres4 = if line.running.value then line.ZPu.re * (line.terminal1.i.re + line.YPu.im * line.terminal1.V.im - line.YPu.re * line.terminal1.V.re) - line.ZPu.im * (line.terminal1.i.im + (-line.YPu.re) * line.terminal1.V.im - line.YPu.im * line.terminal1.V.re) - (line.terminal1.V.re - line.terminal2.V.re) else line.terminal2.i.re model: Line2
2020-06-29 16:46:31 | DEBUG | 121 $DAEres5 = if line.running.value then line.ZPu.re * (line.terminal2.i.re + line.YPu.im * line.terminal2.V.im - line.YPu.re * line.terminal2.V.re) - line.ZPu.im * (line.terminal2.i.im + (-line.YPu.re) * line.terminal2.V.im - line.YPu.im * line.terminal2.V.re) - (line.terminal2.V.re - line.terminal1.V.re) else line.terminal1.i.re model: Line2
2020-06-29 16:46:31 | DEBUG | 122 $DAEres6 = if line.running.value then line.ZPu.re * (line.terminal2.i.im + (-line.YPu.re) * line.terminal2.V.im - line.YPu.im * line.terminal2.V.re) + line.ZPu.im * (line.terminal2.i.re + line.YPu.im * line.terminal2.V.im - line.YPu.re * line.terminal2.V.re) - (line.terminal2.V.im - line.terminal1.V.im) else line.terminal1.i.im model: Line2
2020-06-29 16:46:31 | DEBUG | 123 $DAEres7 = if line.running.value then line.ZPu.re * (line.terminal1.i.im + (-line.YPu.re) * line.terminal1.V.im - line.YPu.im * line.terminal1.V.re) + line.ZPu.im * (line.terminal1.i.re + line.YPu.im * line.terminal1.V.im - line.YPu.re * line.terminal1.V.re) - (line.terminal1.V.im - line.terminal2.V.im) else line.terminal2.i.im model: Line2
2020-06-29 16:46:31 | DEBUG | 124 Calculated variable connector for variable InfBus1_infiniteBus_terminal_V_im model: InfBus1_infiniteBus_terminal_V_im
2020-06-29 16:46:31 | DEBUG | 125 Calculated variable connector for variable InfBus1_infiniteBus_terminal_V_re model: InfBus1_infiniteBus_terminal_V_re
2020-06-29 16:46:31 | DEBUG | 126 Calculated variable connector for variable InfBus2_infiniteBus_terminal_V_im model: InfBus2_infiniteBus_terminal_V_im
2020-06-29 16:46:31 | DEBUG | 127 Calculated variable connector for variable InfBus2_infiniteBus_terminal_V_re model: InfBus2_infiniteBus_terminal_V_re
2020-06-29 16:46:31 | DEBUG | 128 Line1_line_terminal2_V_im = HVDC_hvdc_terminal1_V_im
2020-06-29 16:46:31 | DEBUG | 129 Line1_line_terminal2_V_re = HVDC_hvdc_terminal1_V_re
2020-06-29 16:46:31 | DEBUG | 130 Line2_line_terminal2_V_im = HVDC_hvdc_terminal2_V_im
2020-06-29 16:46:31 | DEBUG | 131 Line2_line_terminal2_V_re = HVDC_hvdc_terminal2_V_re
2020-06-29 16:46:31 | DEBUG | 132 Line1_line_terminal1_V_im = InfBus1_infiniteBus_terminal_V_im_connector_InfBus1_infiniteBus_terminal_V_im
2020-06-29 16:46:31 | DEBUG | 133 Line1_line_terminal1_V_re = InfBus1_infiniteBus_terminal_V_re_connector_InfBus1_infiniteBus_terminal_V_re
2020-06-29 16:46:31 | DEBUG | 134 Line2_line_terminal1_V_im = InfBus2_infiniteBus_terminal_V_im_connector_InfBus2_infiniteBus_terminal_V_im
2020-06-29 16:46:31 | DEBUG | 135 Line2_line_terminal1_V_re = InfBus2_infiniteBus_terminal_V_re_connector_InfBus2_infiniteBus_terminal_V_re
2020-06-29 16:46:31 | DEBUG | 136 line_terminal2_i_im+hvdc_terminal1_i_im = 0
2020-06-29 16:46:31 | DEBUG | 137 line_terminal2_i_re+hvdc_terminal1_i_re = 0
2020-06-29 16:46:31 | DEBUG | 138 line_terminal2_i_im+hvdc_terminal2_i_im = 0
2020-06-29 16:46:31 | DEBUG | 139 line_terminal2_i_re+hvdc_terminal2_i_re = 0
2020-06-29 16:46:31 | DEBUG | 140 infiniteBus_terminal_i_im+line_terminal1_i_im = 0
2020-06-29 16:46:31 | DEBUG | 141 infiniteBus_terminal_i_re+line_terminal1_i_re = 0
2020-06-29 16:46:31 | DEBUG | 142 infiniteBus_terminal_i_im+line_terminal1_i_im = 0
2020-06-29 16:46:31 | DEBUG | 143 infiniteBus_terminal_i_re+line_terminal1_i_re = 0
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | Roots init
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | Roots
2020-06-29 16:46:31 | DEBUG | ------------------------------
2020-06-29 16:46:31 | DEBUG | 0 hvdc.Conv2.idPu > hvdc.UdcPu_Side.dCVoltageControl.activateDeltaPfunction.greaterThreshold.threshold model: HVDC
2020-06-29 16:46:31 | DEBUG | 1 hvdc.Conv2.idPu < hvdc.UdcPu_Side.dCVoltageControl.activateDeltaPfunction.lessThreshold.threshold model: HVDC
2020-06-29 16:46:31 | DEBUG | 2 hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling model: HVDC
2020-06-29 16:46:31 | DEBUG | 3 hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising model: HVDC
2020-06-29 16:46:31 | DEBUG | 4 hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val < hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling model: HVDC
2020-06-29 16:46:31 | DEBUG | 5 hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val > hvdc.UdcPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising model: HVDC
2020-06-29 16:46:31 | DEBUG | 6 hvdc.PPu_Side.iqMod1Pu == 0.0 and hvdc.PPu_Side.iqModPu == 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 7 hvdc.PPu_Side.iqMod1Pu == 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 8 hvdc.PPu_Side.activePowerControl.slewRateLimiter.val < hvdc.PPu_Side.activePowerControl.slewRateLimiter.Falling model: HVDC
2020-06-29 16:46:31 | DEBUG | 9 hvdc.PPu_Side.activePowerControl.slewRateLimiter.val > hvdc.PPu_Side.activePowerControl.slewRateLimiter.Rising model: HVDC
2020-06-29 16:46:31 | DEBUG | 10 hvdc.PPu_Side.iqModPu == 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 11 hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val < hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Falling model: HVDC
2020-06-29 16:46:31 | DEBUG | 12 hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.val > hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter.Rising model: HVDC
2020-06-29 16:46:31 | DEBUG | 13 hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val < hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Falling model: HVDC
2020-06-29 16:46:31 | DEBUG | 14 hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.val > hvdc.PPu_Side.aCVoltageControl.qRefQU.slewRateLimiter1.Rising model: HVDC
2020-06-29 16:46:31 | DEBUG | 15 time - hvdc.Blocking.blockingFunction2.TimerStartBlock > 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 16 time - hvdc.Blocking.blockingFunction2.TimerStartBlock < 0.0 and time > pre(hvdc.Blocking.blockingFunction2.TimerMaintainBlock) + hvdc.Blocking.blockingFunction2.TBlock and time > pre(hvdc.Blocking.blockingFunction2.TimerPrepareDeblock) + hvdc.Blocking.blockingFunction2.TDeblockU model: HVDC
2020-06-29 16:46:31 | DEBUG | 17 hvdc.Blocking.blockingFunction2.blocked == true and hvdc.Blocking.U2Pu < hvdc.Blocking.blockingFunction2.UMaxdbPu and hvdc.Blocking.U2Pu > hvdc.Blocking.blockingFunction2.UMindbPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 18 hvdc.Blocking.blockingFunction2.blocked == false or hvdc.Blocking.U2Pu > hvdc.Blocking.blockingFunction2.UMaxdbPu or hvdc.Blocking.U2Pu < hvdc.Blocking.blockingFunction2.UMindbPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 19 time - hvdc.Blocking.blockingFunction2.TimerPrepareBlock > hvdc.Blocking.blockingFunction2.TBlockUV model: HVDC
2020-06-29 16:46:31 | DEBUG | 20 time - hvdc.Blocking.blockingFunction2.TimerPrepareBlock < hvdc.Blocking.blockingFunction2.TBlockUV model: HVDC
2020-06-29 16:46:31 | DEBUG | 21 hvdc.Blocking.U2Pu < hvdc.Blocking.blockingFunction2.UBlockUVPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 22 hvdc.Blocking.U2Pu > hvdc.Blocking.blockingFunction2.UBlockUVPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 23 time - hvdc.Blocking.blockingFunction1.TimerStartBlock > 0.0 model: HVDC
2020-06-29 16:46:31 | DEBUG | 24 time - hvdc.Blocking.blockingFunction1.TimerStartBlock < 0.0 and time > pre(hvdc.Blocking.blockingFunction1.TimerMaintainBlock) + hvdc.Blocking.blockingFunction1.TBlock and time > pre(hvdc.Blocking.blockingFunction1.TimerPrepareDeblock) + hvdc.Blocking.blockingFunction1.TDeblockU model: HVDC
2020-06-29 16:46:31 | DEBUG | 25 hvdc.Blocking.blockingFunction1.blocked == true and hvdc.Blocking.U1Pu < hvdc.Blocking.blockingFunction1.UMaxdbPu and hvdc.Blocking.U1Pu > hvdc.Blocking.blockingFunction1.UMindbPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 26 hvdc.Blocking.blockingFunction1.blocked == false or hvdc.Blocking.U1Pu > hvdc.Blocking.blockingFunction1.UMaxdbPu or hvdc.Blocking.U1Pu < hvdc.Blocking.blockingFunction1.UMindbPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 27 time - hvdc.Blocking.blockingFunction1.TimerPrepareBlock > hvdc.Blocking.blockingFunction1.TBlockUV model: HVDC
2020-06-29 16:46:31 | DEBUG | 28 time - hvdc.Blocking.blockingFunction1.TimerPrepareBlock < hvdc.Blocking.blockingFunction1.TBlockUV model: HVDC
2020-06-29 16:46:31 | DEBUG | 29 hvdc.Blocking.U1Pu < hvdc.Blocking.blockingFunction1.UBlockUVPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 30 hvdc.Blocking.U1Pu > hvdc.Blocking.blockingFunction1.UBlockUVPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 31 hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y > (-hvdc.PPu_Side.activePowerControl.IpMinPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 32 hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y < hvdc.PPu_Side.activePowerControl.IpMinPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 33 hvdc.PPu_Side.aCVoltageControl.add.y > (-hvdc.PPu_Side.aCVoltageControl.IqMinPu) model: HVDC
2020-06-29 16:46:31 | DEBUG | 34 hvdc.PPu_Side.aCVoltageControl.add.y < hvdc.PPu_Side.aCVoltageControl.IqMinPu model: HVDC
2020-06-29 16:46:31 | DEBUG | 35  $whenCondition2:  data->localData[0]->booleanVars[11] /* $whenCondition2 DISCRETE */ = (((toNativeBool (data->localData[0]->discreteVars[17] /* hvdc.Conv2.switchOffSignal1.value DISCRETE */)) || (toNativeBool (data->localData[0]->discreteVars[18] /* hvdc.Conv2.switchOffSignal2.value DISCRETE */))) || ((toNativeBool (data->localData[0]->discreteVars[19] /* hvdc.Conv2.switchOffSignal3.value DISCRETE */)) && (toNativeBool (data->simulationInfo->discreteVarsPre[16] /* hvdc.Conv2.running.value DISCRETE */))));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 36  $whenCondition22:  data->localData[0]->booleanVars[14] /* $whenCondition22 DISCRETE */ = ((!(toNativeBool (data->localData[0]->discreteVars[9] /* hvdc.Blocking.blocked DISCRETE */)) && !0) || ((toNativeBool (data->localData[0]->discreteVars[9] /* hvdc.Blocking.blocked DISCRETE */)) && 0));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 37  $whenCondition23:  data->localData[0]->booleanVars[15] /* $whenCondition23 DISCRETE */ = ((!(toNativeBool (data->localData[0]->discreteVars[9] /* hvdc.Blocking.blocked DISCRETE */)) && !1) || ((toNativeBool (data->localData[0]->discreteVars[9] /* hvdc.Blocking.blocked DISCRETE */)) && 1));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 38  $whenCondition3:  data->localData[0]->booleanVars[16] /* $whenCondition3 DISCRETE */ = (!(toNativeBool (data->localData[0]->discreteVars[16] /* hvdc.Conv2.running.value DISCRETE */)));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 39  $whenCondition4:  data->localData[0]->booleanVars[17] /* $whenCondition4 DISCRETE */ = (((toNativeBool (data->localData[0]->discreteVars[13] /* hvdc.Conv1.switchOffSignal1.value DISCRETE */)) || (toNativeBool (data->localData[0]->discreteVars[14] /* hvdc.Conv1.switchOffSignal2.value DISCRETE */))) || ((toNativeBool (data->localData[0]->discreteVars[15] /* hvdc.Conv1.switchOffSignal3.value DISCRETE */)) && (toNativeBool (data->simulationInfo->discreteVarsPre[12] /* hvdc.Conv1.running.value DISCRETE */))));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 40  $whenCondition5:  data->localData[0]->booleanVars[18] /* $whenCondition5 DISCRETE */ = (!(toNativeBool (data->localData[0]->discreteVars[12] /* hvdc.Conv1.running.value DISCRETE */)));  model: HVDC
2020-06-29 16:46:31 | DEBUG | 41 Zero crossing for condition change in relation 41: tmp0 = Greater(data->localData[0]->realVars[93] /* hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y variable */,(-data->localData[0]->realVars[76] /* hvdc.PPu_Side.activePowerControl.IpMinPu variable */)); model: HVDC
2020-06-29 16:46:31 | DEBUG | 42 Zero crossing for condition change in relation 42: tmp1 = Less(data->localData[0]->realVars[93] /* hvdc.PPu_Side.activePowerControl.pIAntiWindupVariableLimits.add.y variable */,data->localData[0]->realVars[76] /* hvdc.PPu_Side.activePowerControl.IpMinPu variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 43 Zero crossing for condition change in relation 43: tmp6 = Greater(data->localData[0]->realVars[131] /* hvdc.UdcPu_Side.dCVoltageControl.PI.add.y variable */,data->simulationInfo->realParameter[992] /* hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 44 Zero crossing for condition change in relation 44: tmp7 = Less(data->localData[0]->realVars[131] /* hvdc.UdcPu_Side.dCVoltageControl.PI.add.y variable */,data->simulationInfo->realParameter[993] /* hvdc.UdcPu_Side.dCVoltageControl.PI.limiter1.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 45 Zero crossing for condition change in relation 45: tmp14 = Greater(data->localData[0]->realVars[12] /* hvdc.dCLine.U1dcPu STATE(1) */,data->simulationInfo->realParameter[471] /* hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 46 Zero crossing for condition change in relation 46: tmp15 = Less(data->localData[0]->realVars[12] /* hvdc.dCLine.U1dcPu STATE(1) */,data->simulationInfo->realParameter[472] /* hvdc.PPu_Side.activePowerControl.deltaP.limiter.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 47 Zero crossing for condition change in relation 47: tmp20 = Greater(data->localData[0]->realVars[83] /* hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y variable */,data->simulationInfo->realParameter[463] /* hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 48 Zero crossing for condition change in relation 48: tmp21 = Less(data->localData[0]->realVars[83] /* hvdc.PPu_Side.activePowerControl.deltaP.PI.add.y variable */,data->simulationInfo->realParameter[464] /* hvdc.PPu_Side.activePowerControl.deltaP.PI.limiter1.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 49 Zero crossing for condition change in relation 49: tmp46 = Greater(data->localData[0]->realVars[49] /* hvdc.PPu_Side.aCVoltageControl.add.y variable */,(-data->localData[0]->realVars[48] /* hvdc.PPu_Side.aCVoltageControl.IqMinPu variable */)); model: HVDC
2020-06-29 16:46:31 | DEBUG | 50 Zero crossing for condition change in relation 50: tmp47 = Less(data->localData[0]->realVars[49] /* hvdc.PPu_Side.aCVoltageControl.add.y variable */,data->localData[0]->realVars[48] /* hvdc.PPu_Side.aCVoltageControl.IqMinPu variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 51 Zero crossing for condition change in relation 51: tmp61 = Greater(data->localData[0]->realVars[68] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u variable */,data->simulationInfo->realParameter[313] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 52 Zero crossing for condition change in relation 52: tmp62 = Less(data->localData[0]->realVars[68] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.u variable */,data->simulationInfo->realParameter[314] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.deadZone.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 53 Zero crossing for condition change in relation 53: tmp67 = Greater(data->localData[0]->realVars[62] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y variable */,data->simulationInfo->realParameter[303] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 54 Zero crossing for condition change in relation 54: tmp68 = Less(data->localData[0]->realVars[62] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.add.y variable */,data->simulationInfo->realParameter[304] /* hvdc.PPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 55 Zero crossing for condition change in relation 55: tmp75 = Greater(data->localData[0]->realVars[58] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QRefUQPu variable */,data->simulationInfo->realParameter[204] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 56 Zero crossing for condition change in relation 56: tmp76 = Less(data->localData[0]->realVars[58] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QRefUQPu variable */,data->simulationInfo->realParameter[205] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 57 Zero crossing for condition change in relation 57: tmp81 = Greater(data->localData[0]->realVars[59] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.y variable */,data->localData[0]->realVars[54] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 58 Zero crossing for condition change in relation 58: tmp82 = Less(data->localData[0]->realVars[59] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.limiter.y variable */,data->localData[0]->realVars[56] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 59 Zero crossing for condition change in relation 59: tmp87 = Greater(data->localData[0]->realVars[60] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.variableLimiter.y variable */,data->localData[0]->realVars[55] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 60 Zero crossing for condition change in relation 60: tmp88 = Less(data->localData[0]->realVars[60] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.variableLimiter.y variable */,data->localData[0]->realVars[57] /* hvdc.PPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 61 Zero crossing for condition change in relation 61: tmp111 = Greater(data->localData[0]->realVars[91] /* hvdc.PPu_Side.activePowerControl.limiter.u variable */,data->simulationInfo->realParameter[473] /* hvdc.PPu_Side.activePowerControl.limiter.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 62 Zero crossing for condition change in relation 62: tmp112 = Less(data->localData[0]->realVars[91] /* hvdc.PPu_Side.activePowerControl.limiter.u variable */,data->simulationInfo->realParameter[474] /* hvdc.PPu_Side.activePowerControl.limiter.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 63 Zero crossing for condition change in relation 63: tmp137 = Greater(data->localData[0]->realVars[103] /* hvdc.UdcPu_Side.aCVoltageControl.add.y variable */,(-data->localData[0]->realVars[102] /* hvdc.UdcPu_Side.aCVoltageControl.IqMinPu variable */)); model: HVDC
2020-06-29 16:46:31 | DEBUG | 64 Zero crossing for condition change in relation 64: tmp138 = Less(data->localData[0]->realVars[103] /* hvdc.UdcPu_Side.aCVoltageControl.add.y variable */,data->localData[0]->realVars[102] /* hvdc.UdcPu_Side.aCVoltageControl.IqMinPu variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 65 Zero crossing for condition change in relation 65: tmp169 = Greater(data->localData[0]->realVars[122] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u variable */,data->simulationInfo->realParameter[859] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 66 Zero crossing for condition change in relation 66: tmp170 = Less(data->localData[0]->realVars[122] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.u variable */,data->simulationInfo->realParameter[860] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.deadZone.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 67 Zero crossing for condition change in relation 67: tmp210 = Greater(data->localData[0]->realVars[116] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y variable */,data->simulationInfo->realParameter[849] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 68 Zero crossing for condition change in relation 68: tmp211 = Less(data->localData[0]->realVars[116] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.add.y variable */,data->simulationInfo->realParameter[850] /* hvdc.UdcPu_Side.aCVoltageControl.qRefQU.PI.limiter1.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 69 Zero crossing for condition change in relation 69: tmp218 = Greater(data->localData[0]->realVars[112] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QRefUQPu variable */,data->simulationInfo->realParameter[750] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMax PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 70 Zero crossing for condition change in relation 70: tmp219 = Less(data->localData[0]->realVars[112] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QRefUQPu variable */,data->simulationInfo->realParameter[751] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.uMin PARAM */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 71 Zero crossing for condition change in relation 71: tmp224 = Greater(data->localData[0]->realVars[113] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.y variable */,data->localData[0]->realVars[108] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxPPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 72 Zero crossing for condition change in relation 72: tmp225 = Less(data->localData[0]->realVars[113] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.limiter.y variable */,data->localData[0]->realVars[110] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinPPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 73 Zero crossing for condition change in relation 73: tmp230 = Greater(data->localData[0]->realVars[114] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.variableLimiter.y variable */,data->localData[0]->realVars[109] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMaxUPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 74 Zero crossing for condition change in relation 74: tmp231 = Less(data->localData[0]->realVars[114] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.variableLimiter.y variable */,data->localData[0]->realVars[111] /* hvdc.UdcPu_Side.aCVoltageControl.qRefLim.QMinUPu.y[1] variable */); model: HVDC
2020-06-29 16:46:31 | DEBUG | 75  $whenCondition2:  data->localData[0]->booleanVars[1] /* $whenCondition2 DISCRETE */ = ((toNativeBool (data->localData[0]->discreteVars[1] /* line.switchOffSignal1.value DISCRETE */)) || ((toNativeBool (data->localData[0]->discreteVars[2] /* line.switchOffSignal2.value DISCRETE */)) && (toNativeBool (data->simulationInfo->discreteVarsPre[0] /* line.running.value DISCRETE */))));  model: Line1
2020-06-29 16:46:31 | DEBUG | 76  $whenCondition3:  data->localData[0]->booleanVars[2] /* $whenCondition3 DISCRETE */ = (!(toNativeBool (data->localData[0]->discreteVars[0] /* line.running.value DISCRETE */)));  model: Line1
2020-06-29 16:46:31 | DEBUG | 77  $whenCondition2:  data->localData[0]->booleanVars[1] /* $whenCondition2 DISCRETE */ = ((toNativeBool (data->localData[0]->discreteVars[1] /* line.switchOffSignal1.value DISCRETE */)) || ((toNativeBool (data->localData[0]->discreteVars[2] /* line.switchOffSignal2.value DISCRETE */)) && (toNativeBool (data->simulationInfo->discreteVarsPre[0] /* line.running.value DISCRETE */))));  model: Line2
2020-06-29 16:46:31 | DEBUG | 78  $whenCondition3:  data->localData[0]->booleanVars[2] /* $whenCondition3 DISCRETE */ = (!(toNativeBool (data->localData[0]->discreteVars[0] /* line.running.value DISCRETE */)));  model: Line2
